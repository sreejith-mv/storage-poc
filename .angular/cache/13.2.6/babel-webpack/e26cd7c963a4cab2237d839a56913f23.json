{"ast":null,"code":"import _asyncToGenerator from \"/Users/sreejith/Pfizer_POC/StoragePOC/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { WebPlugin } from '@capacitor/core';\nexport class StorageWeb extends WebPlugin {\n  constructor() {\n    super(...arguments);\n    this.group = 'CapacitorStorage';\n  }\n\n  configure({\n    group\n  }) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (typeof group === 'string') {\n        _this.group = group;\n      }\n    })();\n  }\n\n  get(options) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const value = _this2.impl.getItem(_this2.applyPrefix(options.key));\n\n      return {\n        value\n      };\n    })();\n  }\n\n  set(options) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.impl.setItem(_this3.applyPrefix(options.key), options.value);\n    })();\n  }\n\n  remove(options) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      _this4.impl.removeItem(_this4.applyPrefix(options.key));\n    })();\n  }\n\n  keys() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const keys = _this5.rawKeys().map(k => k.substring(_this5.prefix.length));\n\n      return {\n        keys\n      };\n    })();\n  }\n\n  clear() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      for (const key of _this6.rawKeys()) {\n        _this6.impl.removeItem(key);\n      }\n    })();\n  }\n\n  migrate() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const migrated = [];\n      const existing = [];\n      const oldprefix = '_cap_';\n      const keys = Object.keys(_this7.impl).filter(k => k.indexOf(oldprefix) === 0);\n\n      for (const oldkey of keys) {\n        const key = oldkey.substring(oldprefix.length);\n        const value = (_a = _this7.impl.getItem(oldkey)) !== null && _a !== void 0 ? _a : '';\n        const {\n          value: currentValue\n        } = yield _this7.get({\n          key\n        });\n\n        if (typeof currentValue === 'string') {\n          existing.push(key);\n        } else {\n          yield _this7.set({\n            key,\n            value\n          });\n          migrated.push(key);\n        }\n      }\n\n      return {\n        migrated,\n        existing\n      };\n    })();\n  }\n\n  removeOld() {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      const oldprefix = '_cap_';\n      const keys = Object.keys(_this8.impl).filter(k => k.indexOf(oldprefix) === 0);\n\n      for (const oldkey of keys) {\n        _this8.impl.removeItem(oldkey);\n      }\n    })();\n  }\n\n  get impl() {\n    return window.localStorage;\n  }\n\n  get prefix() {\n    return this.group === 'NativeStorage' ? '' : `${this.group}.`;\n  }\n\n  rawKeys() {\n    return Object.keys(this.impl).filter(k => k.indexOf(this.prefix) === 0);\n  }\n\n  applyPrefix(key) {\n    return this.prefix + key;\n  }\n\n}","map":{"version":3,"sources":["/Users/sreejith/Pfizer_POC/StoragePOC/node_modules/@capacitor/storage/dist/esm/web.js"],"names":["WebPlugin","StorageWeb","constructor","arguments","group","configure","get","options","value","impl","getItem","applyPrefix","key","set","setItem","remove","removeItem","keys","rawKeys","map","k","substring","prefix","length","clear","migrate","_a","migrated","existing","oldprefix","Object","filter","indexOf","oldkey","currentValue","push","removeOld","window","localStorage"],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class StorageWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.group = 'CapacitorStorage';\n    }\n    async configure({ group }) {\n        if (typeof group === 'string') {\n            this.group = group;\n        }\n    }\n    async get(options) {\n        const value = this.impl.getItem(this.applyPrefix(options.key));\n        return { value };\n    }\n    async set(options) {\n        this.impl.setItem(this.applyPrefix(options.key), options.value);\n    }\n    async remove(options) {\n        this.impl.removeItem(this.applyPrefix(options.key));\n    }\n    async keys() {\n        const keys = this.rawKeys().map(k => k.substring(this.prefix.length));\n        return { keys };\n    }\n    async clear() {\n        for (const key of this.rawKeys()) {\n            this.impl.removeItem(key);\n        }\n    }\n    async migrate() {\n        var _a;\n        const migrated = [];\n        const existing = [];\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            const key = oldkey.substring(oldprefix.length);\n            const value = (_a = this.impl.getItem(oldkey)) !== null && _a !== void 0 ? _a : '';\n            const { value: currentValue } = await this.get({ key });\n            if (typeof currentValue === 'string') {\n                existing.push(key);\n            }\n            else {\n                await this.set({ key, value });\n                migrated.push(key);\n            }\n        }\n        return { migrated, existing };\n    }\n    async removeOld() {\n        const oldprefix = '_cap_';\n        const keys = Object.keys(this.impl).filter(k => k.indexOf(oldprefix) === 0);\n        for (const oldkey of keys) {\n            this.impl.removeItem(oldkey);\n        }\n    }\n    get impl() {\n        return window.localStorage;\n    }\n    get prefix() {\n        return this.group === 'NativeStorage' ? '' : `${this.group}.`;\n    }\n    rawKeys() {\n        return Object.keys(this.impl).filter(k => k.indexOf(this.prefix) === 0);\n    }\n    applyPrefix(key) {\n        return this.prefix + key;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}